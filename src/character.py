# character.py
import logging
from ai import AI
from log_formatter import CustomFormatter


class Character:
    logger = logging.getLogger(__name__)
    logger.setLevel(logging.DEBUG)
    ch = logging.StreamHandler()
    ch.setLevel(logging.DEBUG)
    ch.setFormatter(CustomFormatter())
    logger.addHandler(ch)

    def __init__(
        self, 
        name: str, 
        character_setting: str, 
        temperature: float = 0.5, 
        max_tokens: int = 512, 
        logit_bias: dict[str, float] = None, 
        presence_penalty: float = None
    ):
        """
        Inicializuje postavu se zadan√Ωmi nastaven√≠mi.

        :param name: Jm√©no postavy.
        :param character_setting: Nastaven√≠ charakteru pro syst√©movou zpr√°vu.
        :param temperature: Parametr ≈ô√≠zen√≠ n√°hodnosti odpovƒõd√≠, hodnoty bl√≠≈æe 0 vedou k deterministiƒçtƒõj≈°√≠m odpovƒõd√≠m.
        :param max_tokens: Maxim√°ln√≠ poƒçet token≈Ø, kter√© mohou b√Ωt generov√°ny p≈ôi odpov√≠d√°n√≠.
        :param logit_bias: Mapa token≈Ø a jejich bias≈Ø, kter√© ovliv≈àuj√≠ pravdƒõpodobnost v√Ωbƒõru token≈Ø.
        :param presence_penalty: Pokuta za p≈ô√≠tomnost nov√Ωch token≈Ø, hodnoty bl√≠≈æe 2 vedou k vƒõt≈°√≠ pravdƒõpodobnosti nov√Ωch t√©mat.
        """
        self.name = name
        self.character_setting = character_setting
        self.ai: AI = AI(
            user=name,
            temperature=temperature,
            max_tokens=max_tokens,
            logit_bias=logit_bias,
            presence_penalty=presence_penalty
        )
        # self.memory = os.path.join("characters_memory", f"{name}.json")
        # self.messages = self.load_conversation()

    def __str__(self) -> str:
        """Vr√°t√≠ jm√©no postavy."""
        return self.name

    # def save_conversation(self) -> None:
    #     """Ulo≈æ√≠ souƒçasnou konverzaci do souboru."""
    #     with open(self.memory, "w", encoding="utf-8") as file:
    #         json.dump(self.messages, file, indent=2)

    # def load_conversation(self) -> list[dict[str, str]]:
    #     """Naƒçte konverzaci ze souboru nebo vr√°t√≠ v√Ωchoz√≠ syst√©movou zpr√°vu, pokud soubor neexistuje."""
    #     if os.path.exists(self.memory):
    #         with open(self.memory, "r", encoding="utf-8") as file:
    #             print(f"{Fore.YELLOW}Postava si pr√°vƒõ vzpomƒõla o ƒçem jste se bavili minule.{Style.RESET_ALL}")
    #             return json.load(file)
    #     print(f"{Fore.YELLOW}Konverzace nenalezena, postova p≈ôich√°z√≠ do nov√© konverzace.{Style.RESET_ALL}")
    #     return []

    # def add_message(self, role: str, participant: str, content: str) -> None:
    #     """P≈ôid√° zpr√°vu do seznamu zpr√°v postavy."""
    #     new_message = {"role": role, "content": f"{participant}: {content}"}
    #     print(f"{Fore.GREEN}üß†: {new_message}{Style.RESET_ALL}")
    #     self.messages.append(new_message)